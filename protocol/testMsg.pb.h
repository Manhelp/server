// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testMsg.proto

#ifndef PROTOBUF_testMsg_2eproto__INCLUDED
#define PROTOBUF_testMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace test_package {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_testMsg_2eproto();
void protobuf_AssignDesc_testMsg_2eproto();
void protobuf_ShutdownFile_testMsg_2eproto();

class testMsg;

// ===================================================================

class testMsg : public ::google::protobuf::Message {
 public:
  testMsg();
  virtual ~testMsg();

  testMsg(const testMsg& from);

  inline testMsg& operator=(const testMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const testMsg& default_instance();

  void Swap(testMsg* other);

  // implements Message ----------------------------------------------

  inline testMsg* New() const { return New(NULL); }

  testMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const testMsg& from);
  void MergeFrom(const testMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(testMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sendtime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendtimeFieldNumber = 1;
  ::google::protobuf::int32 sendtime() const;
  void set_sendtime(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:test_package.testMsg)
 private:
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 sendtime_;
  friend void  protobuf_AddDesc_testMsg_2eproto();
  friend void protobuf_AssignDesc_testMsg_2eproto();
  friend void protobuf_ShutdownFile_testMsg_2eproto();

  void InitAsDefaultInstance();
  static testMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// testMsg

// required int32 sendtime = 1;
inline bool testMsg::has_sendtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void testMsg::set_has_sendtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void testMsg::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void testMsg::clear_sendtime() {
  sendtime_ = 0;
  clear_has_sendtime();
}
inline ::google::protobuf::int32 testMsg::sendtime() const {
  // @@protoc_insertion_point(field_get:test_package.testMsg.sendtime)
  return sendtime_;
}
inline void testMsg::set_sendtime(::google::protobuf::int32 value) {
  set_has_sendtime();
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:test_package.testMsg.sendtime)
}

// required string msg = 2;
inline bool testMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void testMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void testMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void testMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& testMsg::msg() const {
  // @@protoc_insertion_point(field_get:test_package.testMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void testMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test_package.testMsg.msg)
}
inline void testMsg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test_package.testMsg.msg)
}
inline void testMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test_package.testMsg.msg)
}
inline ::std::string* testMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:test_package.testMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* testMsg::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void testMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:test_package.testMsg.msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace test_package

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_testMsg_2eproto__INCLUDED
